$.extend()
1）当传入的参数为多个对象时，对象会进行合并；把后面的对象合并到第一个对象上、并
把第一个对象返回；如果想深拷贝，在第一个对象的前面再加个参数true即递归深拷贝；
2）如果只传一个对象，把对象合并给了$对象即jQuery对象；

$.fn.extend()
1）相当于是在$.prototype上合并对象；
 
说到合并还有一个：Object.assign(obj,obj2);将obj2合并到obj上；
$.ajax()
1）$.get()
2）$.post();一般用$.ajax（）代替
post请求方式默认是form Data格式；
3）ajax();如果想发送json字符串，设置里要
4）
实现深拷贝三种方法
1）$.extend()
2）JSON.stringigy()和JSON.parse();
3）递归深拷贝，老师写的代码；

总结：
A:$.fn.extend()和$.extend()合并的目的当传入的参数为多个对象时，
对象会进行合并；把后面的对象合并到第一个对象上、并
把第一个对象返回；如果只传一个对象，把对象合并给了$对象即jQuery对象；
因此如果只传一个对象，则这个对象将成为jQ($)对象的公用属性，即传入的对象的方法也为
jQ对象使用----------------而$.fn.extend()传入一个对象，是将对象合并到JQ对象的prototype中，
即合并到共有属性中；传入对象中的方法也为JQ对象使用，真实便宜了jQ对象了；

B:
1）JQ对象中的ajax请求，首先来看$.get(url,{_:Date.now()},function(res){}),传入请求地址，时间戳，
和回调函数，在使用时方便时间戳可以先暂时不写，第二个参数直接写回调函数，内部封装会进行
判断的；
2）JQ对象中的ajax请求，首先来看$.post(url,{name:'xixi'},function(res){}),post请求方式模式是form Data格式；
所用要传输数据真实太麻烦了，但真的要传输数据怎么办，请下面一条；
3）$.ajax(url,{
type:'POST',
contentType:'application/json',
data:JSON.stringify({})，
success:funtion(res){},
error:function(){res},
complete(){res}
})
目前是传入两个参数，一个请求地址，一个对象；在这个对象中有,请求方式即post请求，数据
不是form格式，数据，成功回调，失败回调，完成回调；
C:ajax请求php，echo中的数据即为返回来的数据，ajax请求json和html中的数据返回
来的数据则是文件中的全部，先看一下ajax请求html文件，将整个html文件返回，因此可以通过
JQ的方法html(返回来的html文件所有数据)将返回来的数据全部插入到所需的文档中，但是由于
异步问题，对应的js和css就不好处理了，js和css必须是在返回数据后写，即css和js写在回调函数
中，这样的思想能实现公共头部公共尾部，但并不是最常用的，常用的是吓一跳；
D：$('.').load(url,function(){res}引入js),将公共头部放到$(".")中，如果url里有公共头部和公共尾部，
则通过id名来晒选即$('.').load(url #名字,function(){res}引入js)在url后面空格一下再加上id名；









