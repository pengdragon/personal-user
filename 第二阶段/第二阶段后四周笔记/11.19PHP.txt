
客户端
1）前端通常指的就是浏览器

服务器：
1）apache，nginx，nodejs目前掌握这三种服务器
2）前端说的服务器通常指软件
3）硬件上面，服务器指的是计算能力很强的计算机（硬件上面装了类
似以上服务器，此硬件即服务器）；

服务端渲染（客户端，服务器，php,mysql）
客户端向服务端发送请求，比如请求一个php文件，服务端接受请求，
php解析器，完成解析后，返回给客户端；

http://www.baidu.com
1）先从本地查找，是否拥有该页面，如果有，就先使用本地（缓存）
2）DNS解析：
DNS：域名解析系统
3）找到对应的服务器
4）服务器处理请求，把文件返回

静态页面和动态页面的区别：
1）静态页面指没有数据交互，即没有连接数据库；
特点：页面能容没有人修改，页面内容不会发生改变

2）动态页面指页面通过后台连接数据库，有数据交互；
特点：即使页面内容没有发生改变，如果数据库的内容发生改变，页面内容也会
发生改变；

索引数组声明
$array = array(1,2,3,4,5)
关联数组声明
$array2 = array('name'=>'xixi','age'=>15);

post:
1）安全性比较高，携带的信息，在body中
2）理论上传输的数据没有限制
3）设置数据，增删改
4）没有缓存问题
get
1）安全性比较低，携带的信息，拼接在url中
2）传输的数据量比较小
3）一般是向服务器请求数据
4）缺点：会有缓存问题
5）ctrl+f5或者在浏览器中的设置，强制禁用缓存；

$_POST[]和$_GET[]是关联数组；

所有文本传输格式都是字符串格式

json通常用来做数据传递 
1）json字符串中可以有"null"；
2）json字符串中不能有NAN,function，undefined
3）obj = JSON.stringify（obj)；转换为json字符串
4）obj = JSON.parse(obj)；转为json对象；
5）php中获取json内容：$json = file_get_contents("table.json");
6）php中json字符串转换为对象，$json  = json_decode($json);
7）属性名称需要用双引号，字符串类型一定要用双引号
8）json字符串转换为对象，需要严格按照格式来

所用的请求都是字符串；

总结：
A：json通常是用来做数据传输的，
      在srcipt里的两个方法：obj = JSON.stringify（obj)；对象转换为json字符串；
                                          obj = JSON.parse(obj)；字符串转为json对象；
      在php里 的两个方法：php中获取json内容：$json = file_get_contents("table.json");
                                         php中json字符串转换为对象，$json  = json_decode($json);
B:获取json数组里一个对象的数据： foreach($json[$i] as $attr){$attr;} 
                                                      $json[$i]->name;
C:在php中，echo()输出html标签不会转义成文本即会对html进行解析，仅仅输出基本数据类型数据；
                    而var_dump()输出html标签会转义即不会对html进行解析，各种数据类型都会输出，输出格式为：属性名称=>属性值的数据类型+
	   属性值+属性值得长度，如果输出的是字符串，则输出格式为：属性值的数据类型+ 属性值+属性值得长度
D:对象访问属性值：对象->属性名称；
   对象的遍历：foreach(对象 as $attr);
   PHP声明变量用$+变量名，并且$为变量名的一部分，必须带着走；
E:HTML里的表单中action为提交请求的跳转文件路径，即提交之后需要干什么都会在跳转文件里写；

F：关联数组里：$array = array('name'=>'xixi','age'=>15);这样声明
	         count(array)或者sizeof(array)求数组长度，遍历的时候也会用到长度；
                         访问关联数组里面的属性值：数组名['属性名称']即$array['name'];结果为‘xixi’;
      索引数组里：$array = array(1,2,3,4,5)；这样声明
   	         count(array)或者sizeof(array)求数组长度，遍历的时候也会用到长度；
	         访问索引数组：数组名['属性值即索引']或者数组名[索引]即$array[1]或者$array['1'],结果为2；
G:php里面编码输出中文会乱码，可以在里面添加编码方式：header("Content-type:text/html;charset=UTF-8"）;

H:循环关联数组：foreach($json[$i] as $val=>$attr);$attr为属性值，$val为属性名称；

I:在PHP里：索引数组访问属性值两个方法，关联数组访问属性名称以及属性值一个方法即foreach，
对象访问属性值两个方法，对象访问属性名称一个方法即foreach；


新课：

同步/异步

单线程/多线程
1）js语言运行是单线程的，一根筋
2）多线程即多根筋，此筋坏了，其他筋仍然继续

Promise：是一个对象
1）接受一个参数，且参数类型为函数，函数接收两个参数
2）回调函数回即掉地狱，越陷越深；promise来解决；
async function name(params){}

前后端分离即工作模式，也是现在最流行的一种工作模式；
1）前后端不分离确定：不能并行开发
2）前后端分离优点：
前端和后台两者可以并行开发，减少开发成本；
把一些数据处理交给前端做，减少服务器压力；后台有更多的时间去进行数据优化；
维护变得简单；

分离后怎么做：前端做前端的，后台做后台的		
两者之间经过ajax 形式进行前后端的数据交互
再通过接口联调整合

分离面临一个问题：
浏览器的规则：浏览器有个同源策略；同源策略即端口号，传输协议，域名，三者都必须一样，才成为同源； 	
如果发送ajax，发送的和接收的服务器不同源，则无法获取数据；

后台是没有跨域的，前端有跨域
前端跨域请求，解决方案
1）代理的方式：先发送到本地服务器，服务器进行转发，拿到数据后，再返回；
2）cros：服务端即后台允许域名访问
3）json：利用script标签没有跨域限制，浏览器没有给它设置跨域问题






	         

































