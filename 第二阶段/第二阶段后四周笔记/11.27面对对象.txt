面对对象

设计模式
工厂模式
1）批量创建对象，且每个对象之间互不影响；
2）缺点：不知道生产厂家
构造函数
1）new运算符会把函数中的this指向当前的实例；前提是没有返回值；
2）可以认爹
3）缺点：每一次返回新的对象，如果属性时函数（方法），每一次都会生成
一个新内存但是每个函数完成的功能都是一样的，所以
原型链
1）当一个对象使用一个属性时，首先从自己查找，如果找到直接使用，如
果找不到，从__proto__里进行寻找，如果还找不到，则继续找当前对象中__p
roto__,直到没有__proto__,如果还没有找到，返回undefined;

对象天生自带一个属性__proto__;
函数天生自带一个属性prototype;prototype天生自带一个属性constrctor,而
constrctor执行函数本身；

实例化对象的__proto__指向构造函数的prototype;


总结：
1：在做表单中，创建一个对象来存放各种效验方法；
     因为对象地址是同一个，此方法可以被改写，因此诞生了构造函数；
2：构造函数里的方法不会被改写，new的每一个实例都是一个新的对象；
      但是如果不同的对象想实现同一种功能，也得开辟两个堆内存，这样
      非常的耗费资源，因此请看第三点；
3：公有属性和共有属性，
4：构造函数里加一条判断，增加安全机制；
if(this instansof People){this.name='xx'}else{return new Peopel};