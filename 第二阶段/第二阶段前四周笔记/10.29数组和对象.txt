在当前作用域中 
在代码执行前 把带var的变量提升到当前作用域的第一行
只提升 不赋值；

string number boolean null undefined
对象object 
1）是一种特殊且复杂的数据类型，对象有很多种 这只是
其中的一种；
2）object分为：数组，正则，日期对象，json对象，function(){}等等;
3）js中一切事物皆对象 null和undefined除外 因其什么都没有；
4）对象的种类有很多种  下面是几种写法
var obj = {}
var  arr = [];
5） 为什么要有对象：a如果变量重复会进行覆盖 
b如果描述的属性很多，描述多个对象
每一个属性无法确定
6）当访问对象没有的属性时 会返回undined;
7）属性中的属性值可以是任意数据类型 比如function object
8）对象后面.跟什么属性，对象就会添加什么属性
9）给对象添加一个属性，使用变量的形式
var eat = 'eat';
对象[eat] = '吃';
对象['run'] = '跑'；
10）对象中 属性名称默认都是字符串类型的；
11）对象中属性值和属性用：链接

引用数据类型
1）栈内存即作用域所在区域 ，所有的var都在栈中，
基本数据类型的值都在栈内存中，
2）变量是无法直接操作对象，通过地址改变对象；
3）当声明一个引用数据类型（对象），会在
堆内存中开辟一个空间，用于
存储对象的值，把该对象在堆内存中的地址
返回给栈中的变量用于保存


数组
1）为什么要有数组：便于表达多个对象；
2）数组跟对象有什么区别：对象是无需的集合；
数组是有序的集合；通常来讲，对象是用来描述一个具体的事物，
而数组是用来存放多个事物
3）数组声明方式
a：构造函数声明方式 var arr = new Array(10);
一个实参且为数字的情况，声明一个数组长度为10的数组；
一个实参不为数字即声明一个有一个元素的数组；

b：自变量声明方式
var arr = [2,4,5,7];

2）在数组中，对象中的属性名称在数组里称之为索引或者下标（索引
一定是数字字符串）；
3）索引有最大值，最大值是2**32-2；数组最大长度为2**32-1；
4）数组中的元素，可以是任意类型；因其是用来存储数据，各种
数据都要存储；
5）当超出索引范围，默认把数字当成属性名称；
6）数组分为稀疏数组和密集数组
稀疏数组：
密集数组：


数组中常用的方法
1）数组通常来讲，是用来存放多条数据的
2）方法中就有：曾删改查
3）增加元素
后面增加一个元素：arr.push(3),会改变数组本身,返回数组长度；
前面增加一个元素：arr.unshift(1),会改变数组本身,返回数组长度；
4)删除
后面删除一个元素：arr.pop(),会改变数组本身，返回所删除的元素；
5）splice():三个参数 
起始位置，可以传负数 从后面开始数 但是需从1开始数
影响的个数 
更改的值 
可以做
添加（影响个数为0），删除（没有第三个参数即只有前两个参数），
替换；改变数组本身；

6）slice（起始位置，结束位置）截取数组，不会改变原有数组，
返回截取的新数组；两个参数，第一个起始位置，第二个结束位置，截取时取
不到最后一个；第二个参数可以不写，默认截取到末尾；可以传负数，从后面开始
数 但是需从1开始数

7）concat() 合并数组，返回一个新的数组，不会改变数组本身；拼接的可以
是一个数组组或者多个数组 也可以是数字 字符串等等各种类型数据都是可以的；


8）indexOf(元素) 当前元素在数组中的索引

9）join('拼接附');将数组中的元素拼接成字符串；参数默认是字符串；不会
改变数组本身； 
10）reverse()元素倒序，会改变数组本身；
总结：增删改 倒序 会改变数组本身；






























