
在事件处理程序中，this代表当前绑定的dom元素
1）在全局作用域中，this指向window
2）在函数中，this只与函数调用方式有关；
3）只与函数的调用方式有关，中途经理什么转换都无所谓；
浏览器发展到第四代的时候，发现了一个有意思的问题，点击一个元素时，是同时
点击了多个还是一个；
1）微软：点击一个元素，相当于点击多个.事件传递顺序为冒泡流
2）网景：点击一个元素，相当于点击多个.事件传递顺序为捕获流


事件流：描述事件传递的顺序；
1）冒泡流：从最具体的的元素传递到最不具体的元素（document）
2）捕获流：从最不具体的元素传递到最具体的元素；

阻止冒泡流
1）en.stopPropagation();
2)  en.cancelBubble = true;
3）兼容写法

dom事件流：dom2级的事件传递顺序
1）三个过程：捕获阶段，处于自身阶段，冒泡阶段
2）dom2级添加的事件简称事件监听；$btn.addEventListener(事件名称，
事件处理程序，是否在捕获阶段触发 )
3）规范：明文规定在捕获阶段不可以触发事件，但是浏览器默认支持，所以你可以在捕获阶段触发；
4）dom0级事件中，相同的dom元素，同一个事件只能添加一个事件处理程序；
      dom2级事件中，相同的dom元素，同一个事件可以添加多个事件处理程序；

取消事件监听
1）$btn.removeEventListener();想取消哪一个事件监听，取消时传入的参数必须一模一样，
传入的参数要和监听时传入的参数恒等；
2）切记任意两个函数不是不相等的；
3）在dom2级事件中，事件处理程序中this同样指向当前所绑定的对象；

默认处理程序
1）默认处理程序：天生自带，浏览器处理；比如a标签，鼠标右键，快捷键crtl+s,保存网页；
2）在form表单中，文本框按enter会默认触发submite按钮，如果没有submite按钮，默认
表单提交；

阻止浏览器默认行为即阻止默认程序（默认程序都是在触发程序后才执行的）
1）ev.preventDefault();
2）ev.returnValue=false;
3)  return false;尽量少用，因其还有冒泡的作用；
鼠标右键oncontextmenu;


























